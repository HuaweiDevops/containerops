# Copyright 2016 - 2017 Huawei Technologies Co., Ltd. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

uri: cncf/demo-for-cncf-ci/build-test-release-deploy
title: Demo For Cloud Native Computing Foundation CI Working Group
version: 4
tag: latest
timeout: 0
stages:
  -
    type: start
    name: start
    title: Start
  -
    type: normal
    name: prometheus-test-build-release
    title: Building, testing Prometheus project, compile then upload to Dockyard artifact repository.
    sequencing: sequence
    actions:
      -
        name: build-prometheus
        title: Build Prometheus project with "make build"
        jobs:
          -
            type: component
            kubectl: prometheus/prometheus-build.yaml
            endpoint: hub.opshub.sh/containerops/cncf-demo-prometheus:latest
            resources:
              cpu: 2
              memory: 4G
            timeout: 0
            environments:
              - CO_DATA: "prometheus=https://github.com/prometheus/prometheus.git action=build release=hub.opshub.sh/containerops/cncf-demo/demo"
      -
        name: test-prometheus
        title: Test Prometheus project with "make test"
        jobs:
          -
            type: component
            kubectl: prometheus/prometheus-test.yaml
            endpoint: hub.opshub.sh/containerops/cncf-demo-prometheus:latest
            resources:
              cpu: 2
              memory: 4G
            timeout: 0
            environments:
              - CO_DATA: "prometheus=https://github.com/prometheus/prometheus.git action=test release=hub.opshub.sh/containerops/cncf-demo/demo"
      -
        name: release-prometheus
        title: Compile Prometheus project with "make build", then upload to artifact repository
        jobs:
          -
            type: component
            kubectl: prometheus/prometheus-release.yaml
            endpoint: hub.opshub.sh/containerops/cncf-demo-prometheus:latest
            resources:
              cpu: 2
              memory: 4G
            timeout: 0
            environments:
              - CO_DATA: "prometheus=https://github.com/prometheus/prometheus.git action=release release=hub.opshub.sh/containerops/cncf-demo/demo"
  -
    type: normal
    name: coredns-test-build-release
    title: Building, testing CoreDNS project, compile then upload to Dockyard artifact repository.
    sequencing: sequence
    actions:
      -
        name: build-coredns
        title: Build CoreDNS project with "make coredns"
        jobs:
          -
            type: component
            kubectl: coredns/coredns-build.yaml
            endpoint: hub.opshub.sh/containerops/cncf-demo-coredns:latest
            resources:
              cpu: 2
              memory: 4G
            timeout: 0
            environments:
              - CO_DATA: "coredns=https://github.com/coredns/coredns.git action=test release=hub.opshub.sh/containerops/cncf-demo/demo"
      -
        name: test-coredns
        title: Test CoreDNS project with "make test"
        jobs:
          -
            type: component
            kubectl: coredns/coredns-test.yaml
            endpoint: hub.opshub.sh/containerops/cncf-demo-coredns:latest
            resources:
              cpu: 2
              memory: 4G
            timeout: 0
            environments:
              - CO_DATA: "coredns=https://github.com/coredns/coredns.git action=test release=hub.opshub.sh/containerops/cncf-demo/demo"
      -
        name: release-coredns
        title: Compile CoreDNS project with "make coredns", then upload to artifact repository
        jobs:
          -
            type: component
            kubectl: coredns/coredns-release.yaml
            endpoint: hub.opshub.sh/containerops/cncf-demo-coredns:latest
            resources:
              cpu: 0
              memory: 0
            timeout: 0
            environments:
              - CO_DATA: "coredns=https://github.com/coredns/coredns.git action=release release=hub.opshub.sh/containerops/cncf-demo/demo"
  -
    type: normal
    name: k8s-test-build-release
    title: Building, testing Kubernetes project using Bazel, compile then upload to Dockyard artifact repository.
    sequencing: sequence
    actions:
      -
        name: build-kubernetes
        title: Build Kubernetes project with "make bazel-build"
        jobs:
          -
            type: component
            kubectl: kubernetes/kubernetes-build.yaml
            endpoint: hub.opshub.sh/containerops/cncf-demo-kubernetes:latest
            resources:
              cpu: 2
              memory: 8G
            timeout: 0
            environments:
              - CO_DATA: "kubernetes=https://github.com/kubernetes/kubernetes.git action=build release=hub.opshub.sh/containerops/cncf-demo/demo"
      -
        name: release-kubernetes
        title: Compile Kubernetes project with "make all", then upload all binaries to artifact repository
        jobs:
          -
            type: component
            kubectl: kubernetes/kubernetes-release.yaml
            endpoint: hub.opshub.sh/containerops/cncf-demo-kubernetes:latest
            resources:
              cpu: 2
              memory: 8G
            timeout: 0
            environments:
              - CO_DATA: "kubernetes=https://github.com/kubernetes/kubernetes.git action=release release=hub.opshub.sh/containerops/cncf-demo/demo"
      -
        name: test-kubernetes
        title: Test Kubernetes project with "make bazel-test"
        jobs:
          -
            type: component
            kubectl: kubernetes/kubernetes-test.yaml
            endpoint: hub.opshub.sh/containerops/cncf-demo-kubernetes:latest
            resources:
              cpu: 2
              memory: 8G
            timeout: 0
            environments:
              - CO_DATA: "kubernetes=https://github.com/kubernetes/kubernetes.git action=test release=hub.opshub.sh/containerops/cncf-demo/demo"
  -
    type: end
    name: end
    title: End
